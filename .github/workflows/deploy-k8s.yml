name: Deploy to Kubernetes

on:
  workflow_call:
    inputs:
      service-name:
        description: 'Service name in GitOps repo'
        type: string
        required: true
      environment:
        description: 'Deployment environment'
        type: string
        required: true
      image-tag:
        description: 'Docker image tag to deploy'
        type: string
        required: true
      image-url:
        description: 'Full Docker image URL (including tag)'
        type: string
        required: true
      gitops-repo:
        description: 'GitOps repository'
        type: string
        required: false
        default: 'karmadev/gitops'
      gitops-branch:
        description: 'Branch in GitOps repo'
        type: string
        required: false
        default: 'master'
      version:
        description: 'Version number for deployment summary'
        type: string
        required: false
    secrets:
      GITOPS_TOKEN:
        description: 'GitHub token for GitOps repo'
        required: true
      SLACK_WEBHOOK_URL:
        description: 'Slack webhook URL for notifications'
        required: false

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    steps:
      - name: Checkout GitOps repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.gitops-repo }}
          token: ${{ secrets.GITOPS_TOKEN }}
          ref: ${{ inputs.gitops-branch }}
          path: gitops

      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITOPS_TOKEN }}
          path: source

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Prepare GitOps overlay & bump image
        run: |
          set -euo pipefail
          ENV="${{ inputs.environment }}"
          SERVICE_NAME="${{ inputs['service-name'] }}"
          IMAGE_URL="${{ inputs['image-url'] }}"

          # Prefer source overlays if present; otherwise operate in GitOps repo
          if [ -d "source/kubernetes/overlays/$ENV" ]; then
            echo "Using source/kubernetes/overlays/$ENV as desired state"
            mkdir -p "gitops/$SERVICE_NAME/$ENV"
            rsync -a --delete "source/kubernetes/overlays/$ENV/" "gitops/$SERVICE_NAME/$ENV/"
            cd "gitops/$SERVICE_NAME/$ENV"
          else
            echo "Using existing GitOps overlays at gitops/$SERVICE_NAME/$ENV"
            cd "gitops/$SERVICE_NAME/$ENV"
          fi

          # Ensure a kustomization exists
          if [ ! -f kustomization.yaml ] && [ ! -f kustomization.yml ]; then
            echo "No kustomization.yaml found; creating one to manage images"
            kustomize create --resources .
          fi

          # Set image (works whether images block exists or not)
          IMAGE_NAME="$(echo "$IMAGE_URL" | sed 's/:.*$//')"
          kustomize edit set image "${IMAGE_NAME}=${IMAGE_URL}"

          echo "Current kustomization.yaml:"
          cat kustomization.yaml

      - name: Commit and push changes
        run: |
          set -euo pipefail
          cd gitops
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          ENV="${{ inputs.environment }}"
          IMAGE_URL="${{ inputs['image-url'] }}"
          SERVICE_NAME="${{ inputs['service-name'] }}"
          COMMIT_SHA="${{ github.sha }}"
          SHORT_SHA="${COMMIT_SHA:0:7}"
          DEPLOYER="${{ github.actor }}"

          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "${SERVICE_NAME}: ${ENV}, GitHub Actions build at ${SHORT_SHA}, by: ${DEPLOYER} image: ${IMAGE_URL}"
          git push

      - name: Deployment Summary
        run: |
          ENV="${{ inputs.environment }}"
          IMAGE_TAG="${{ inputs['image-tag'] }}"
          VERSION="${{ inputs.version }}"
          SERVICE_NAME="${{ inputs['service-name'] }}"
          echo "## ðŸŽ‰ Deployment Initiated Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployment Details:" >> $GITHUB_STEP_SUMMARY
          if [ -n "${VERSION:-}" ]; then
            echo "- **Version:** \`${VERSION}\`" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- **Environment:** \`${ENV}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Service:** ${SERVICE_NAME}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image Tag:** \`${IMAGE_TAG}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit SHA:** \`${GITHUB_SHA:0:8}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. If ArgoCD is auto-sync, it will reconcile shortly." >> $GITHUB_STEP_SUMMARY
          echo "2. Otherwise, manually sync in ArgoCD and watch health." >> $GITHUB_STEP_SUMMARY

      - name: Send Slack Notification
        if: success()
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook-type: incoming-webhook
          payload: |
            {
              "text": "ðŸš€ Deployment Successful",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "ðŸš€ ${{ inputs.service-name }} Deployed to ${{ inputs.environment }}",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    { "type": "mrkdwn", "text": "*Service:*\n${{ inputs.service-name }}" },
                    { "type": "mrkdwn", "text": "*Environment:*\n${{ inputs.environment }}" },
                    { "type": "mrkdwn", "text": "*Version:*\n${{ inputs.version || inputs.image-tag }}" },
                    { "type": "mrkdwn", "text": "*Deployed by:*\n${{ github.actor }}" }
                  ]
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Commit:* <${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>\n*Workflow:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
